{"version":3,"sources":["img/persik.png","panels/Nav.js","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Nav","props","state","activeStory","onStoryChange","bind","e","this","setState","currentTarget","dataset","story","tabbar","onClick","selected","data-story","text","label","id","activePanel","React","Component","user","Home","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","size","level","data-to","osName","platform","Persik","left","IOS","className","persik","alt","App","useState","setActivePanel","setUser","popout","setPopout","useEffect","connect","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","a","async","sendPromise","fetchData","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.89f3801b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {View} from '@vkontakte/vkui';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification';\r\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more';\r\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\r\n\r\n\r\n\r\nclass Nav extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStory: 'more'\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'feed'}\r\n                        data-story=\"feed\"\r\n                        text=\"Новости\"\r\n                    ><Icon28Newsfeed /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'messages'}\r\n                        data-story=\"messages\"\r\n                        label=\"12\"\r\n                        text=\"Сообщения\"\r\n                    ><Icon28Messages /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Уведомлен.\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'more'}\r\n                        data-story=\"more\"\r\n                        text=\"Ещё\"\r\n                    ><Icon28More /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"feed\" activePanel=\"feed\">\r\n                    <Panel id=\"feed\">\r\n                        <PanelHeader>Feed</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Discover</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"messages\" activePanel=\"messages\">\r\n                    <Panel id=\"messages\">\r\n                        <PanelHeader>Messages</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Notifications</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"more\" activePanel=\"more\">\r\n                    <Panel id=\"more\">\r\n                        <PanelHeader>More</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {View} from '@vkontakte/vkui';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nlet user = \"Ноунейм Ноунеймович\";\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\n\t<View activePanel={id}>\n\t<Panel id={id}>\n\t\t<PanelHeader>Gladiator</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{user = `${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\n\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"persik\">\n                    Show me the Persik, please, { user }!\n                </Button>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"form\">\n                    Go to panel 1\n                </Button>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"finish\">\n                    Go to panel 2\n                </Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n\t\t<Panel id=\"form\">\n\t\t\t<div>\n\t\t\t\t<PanelHeader>Gladiator</PanelHeader>\n\t\t\t<h1>FORM</h1>\n            <Button size=\"l\" level=\"1\" onClick={go} data-to=\"persik\">\n                Show me the Persik, please, { user }!\n            </Button>\n            <Button size=\"l\" level=\"1\" onClick={go} data-to={id}>\n                Go to panel 1\n            </Button>\n            <Button size=\"l\" level=\"1\" onClick={go} data-to=\"finish\">\n                Go to panel 3\n            </Button>\n\t\t\t</div>\n\t\t</Panel>\n\t\t<Panel id=\"finish\">\n\t\t\t<h2>FINISH</h2>\n\t\t\t<Button size=\"l\" level=\"1\" onClick={go} data-to=\"persik\">\n\t\t\t\tShow me the Persik, please, { user }!\n\t\t\t</Button>\n\t\t\t<Button size=\"l\" level=\"1\" onClick={go} data-to={id}>\n\t\t\t\tGo to panel 1\n\t\t\t</Button>\n\t\t\t<Button size=\"l\" level=\"1\" onClick={go} data-to=\"form\">\n\t\t\t\tGo to panel 2\n\t\t\t</Button>\n\t\t</Panel>\n\t</View>\n\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Nav from './panels/Nav';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t<Nav />\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}