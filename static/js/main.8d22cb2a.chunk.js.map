{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","user","Home","id","go","fetchedUser","activePanel","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","setActivePanel","setUser","popout","setPopout","useEffect","connect","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","a","async","sendPromise","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8d22cb2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {View} from '@vkontakte/vkui';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nlet user = \"Ноунейм Ноунеймович\";\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\n\t<View activePanel={id}>\n\t<Panel id={id}>\n\t\t<PanelHeader>Gladiator</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{user = `${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\n\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"persik\">\n                    Show me the Persik, please, { user }!\n                </Button>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"form\">\n                    Go to panel 1\n                </Button>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"finish\">\n                    Go to panel 2\n                </Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n\t\t<Panel id=\"form\">\n\t\t\t<h1>FORM</h1>\n            <Button size=\"l\" level=\"1\" onClick={go} data-to=\"persik\">\n                Show me the Persik, please, { user }!\n            </Button>\n            <Button size=\"l\" level=\"1\" onClick={go} data-to={id}>\n                Go to panel 1\n            </Button>\n            <Button size=\"l\" level=\"1\" onClick={go} data-to=\"finish\">\n                Go to panel 3\n            </Button>\n\t\t</Panel>\n\t\t<Panel id=\"finish\">\n\t\t\t<h2>FINISH</h2>\n\t\t\t<Button size=\"l\" level=\"1\" onClick={go} data-to=\"persik\">\n\t\t\t\tShow me the Persik, please, { user }!\n\t\t\t</Button>\n\t\t\t<Button size=\"l\" level=\"1\" onClick={go} data-to={id}>\n\t\t\t\tGo to panel 1\n\t\t\t</Button>\n\t\t\t<Button size=\"l\" level=\"1\" onClick={go} data-to=\"form\">\n\t\t\t\tGo to panel 2\n\t\t\t</Button>\n\t\t</Panel>\n\t</View>\n\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}