{"version":3,"sources":["img/persik.png","panels/Nav.js","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","users","id","name","Nav","props","state","activeStory","search","showList","onStoryChange","bind","onChange","e","this","setState","currentTarget","dataset","story","tabbar","onClick","selected","data-story","text","activePanel","theme","value","map","length","key","fetchedUser","first_name","last_name","toLowerCase","filter","indexOf","React","Component","user","Home","go","title","before","photo_200","src","description","city","size","level","data-to","osName","platform","Persik","left","IOS","className","persik","alt","App","useState","setActivePanel","setUser","popout","setPopout","useEffect","connect","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","a","async","sendPromise","fetchData","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7a9d89ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {View} from '@vkontakte/vkui';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Search from '@vkontakte/vkui/dist/components/Search/Search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notification';\r\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon28More from '@vkontakte/icons/dist/28/more';\r\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\r\nimport List from '@vkontakte/vkui/dist/components/List/List';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\n\r\nconst users = [\r\n    {id: 3201, name: \"Влад Анесов\"},\r\n    {id: 3273, name: \"Вадим Дорохов\"},\r\n    {id: 3205, name: \"Андрей Абрамов\"},\r\n    {id: 3282, name: \"Александр Колобов\"},\r\n    {id: 3283, name: \"Артур Стамбульцян\"},\r\n    {id: 3284, name: \"Илья Таратухин\"},\r\n    {id: 3285, name: \"Роман Захаров\"},\r\n    {id: 3286, name: \"Михаил Андриевский\"},\r\n    {id: 3287, name: \"Тарас Иванов\"},\r\n    {id: 3288, name: \"Илья Гришин\"},\r\n    {id: 3117, name: \"Илья Пеняев\"},\r\n    {id: 3118, name: \"Иван Барышев\"},\r\n    {id: 3119, name: \"Иван Гусев\"},\r\n    {id: 3120, name: \"Макс Павлов\"},\r\n    {id: 3121, name: \"Антон Циварев\"},\r\n    {id: 3122, name: \"Юля Брук\"},\r\n    {id: 3123, name: \"Андрей Рогозов\"},\r\n    {id: 3124, name: \"Андрей Новосельский\"}\r\n];\r\n\r\nclass Nav extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            activeStory: 'feed',\r\n            search: '',\r\n            showList: false\r\n        };\r\n\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n    onChange (search) { this.setState({ search }); }\r\n\r\n    get users () {\r\n        const search = this.state.search.toLowerCase();\r\n        return users.filter(({name}) => name.toLowerCase().indexOf(search) > -1);\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'feed'}\r\n                        data-story=\"feed\"\r\n                        text=\"Рейтинг\"\r\n                    ><Icon28Newsfeed /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        data-story=\"discover\"\r\n                        text=\"Условия\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'messages'}\r\n                        data-story=\"messages\"\r\n                        text=\"Виджет\"\r\n                    ><Icon28Messages /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        text=\"Настройки\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'more'}\r\n                        data-story=\"more\"\r\n                        text=\"Фичи\"\r\n                    ><Icon28More /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"feed\" activePanel=\"feed\">\r\n                    <Panel id=\"feed\">\r\n                        <PanelHeader>Текущий рейтинг</PanelHeader>\r\n                        <Search theme=\"default\" value={this.state.search} onChange={this.onChange} />\r\n                        {this.users.map(users => users.length > 0 &&\r\n                        <List>\r\n                            {this.users.map(users => <Cell key={users.id}>{users.name}</Cell>)}\r\n                        </List>)}\r\n                        {this.props.fetchedUser &&\r\n                        <div>\r\n                        <p>Йоу,\r\n                            {this.props.fetchedUser.first_name} {this.props.fetchedUser.last_name}, поиск пока не робит <br/></p>\r\n                        </div>}\r\n                          <h1>Здесь будет таблица рейтинга</h1>\r\n\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\">\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Условия</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"messages\" activePanel=\"messages\">\r\n                    <Panel id=\"messages\">\r\n                        <PanelHeader>Виджет</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Настройки</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"more\" activePanel=\"more\">\r\n                    <Panel id=\"more\">\r\n                        <PanelHeader>Фичи</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Nav;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {View} from '@vkontakte/vkui';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nlet user = \"Ноунейм Ноунеймович\";\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<View activePanel={id}>\n\t<Panel id={id}>\n\t\t<PanelHeader>Gladiator</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{user = `${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"persik\">\n                    Show me the Persik, please, { user }!\n                </Button>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"form\">\n                    Go to panel 1\n                </Button>\n                <Button size=\"l\" level=\"1\" onClick={go} data-to=\"finish\">\n                    Go to panel 2\n                </Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n\t</View>\n\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Nav from './panels/Nav';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('feed');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Nav id='feed' fetchedUser={fetchedUser}  />\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}